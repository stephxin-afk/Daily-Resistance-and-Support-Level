name: Daily Report + Pages Deploy
on:
  schedule:
    - cron: "0 1 * * 1-5"     # 工作日 UTC 01:00 触发（北京时间09:00）
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Run report
        env:
          FINNHUB_API_KEY: ${{ secrets.FINNHUB_API_KEY }}
          WECHAT_SCT_SENDKEY: ${{ secrets.WECHAT_SCT_SENDKEY }}
          PUSHPLUS_TOKEN: ${{ secrets.PUSHPLUS_TOKEN }}
          REPORT_URL: ${{ vars.SITE_URL }}report.pdf
          SITE_URL: ${{ vars.SITE_URL }}
          # 覆盖用的股票清单（逗号分隔）；若为空，report.py 会自动回退到 seeds.yaml/DEFAULT_TICKERS
          TICKERS: ${{ vars.DEFAULT_TICKERS }}
        run: python report.py

      - name: Prepare Pages artifact
        run: |
          mkdir -p public
          # 三个产物复制到 public（不存在也不会失败）
          cp -f report.pdf public/ || true
          cp -f index.html public/ || true
          cp -f table.csv public/ || true
          # 给 404 一个跳转，避免直接 404
          echo '<!doctype html><meta charset="utf-8"><meta http-equiv="refresh" content="0;url=./index.html">' > public/404.html
          echo "=== public content ==="
          ls -l public

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public
          name: github-pages
          retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
