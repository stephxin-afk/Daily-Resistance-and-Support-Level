name: Daily Report + Pages Deploy

on:
  schedule:
    - cron: "0 1 * * 1-5"   # UTC 工作日 01:00，按需改
  workflow_dispatch: {}
  push:
    paths:
      - "report.py"
      - ".github/workflows/daily.yml"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Run report.py
        env:
          FINNHUB_API_KEY:    ${{ secrets.FINNHUB_API_KEY }}
          WECHAT_SCT_SENDKEY: ${{ secrets.WECHAT_SCT_SENDKEY }}
          PUSHPLUS_TOKEN:     ${{ secrets.PUSHPLUS_TOKEN }}
          TICKERS:            ${{ vars.TICKERS }}
          DEFAULT_TICKERS:    ${{ vars.DEFAULT_TICKERS }}
          SITE_URL:           ${{ vars.SITE_URL }}
          REPORT_URL:         ${{ vars.REPORT_URL }}
        shell: bash
        run: |
          set -euo pipefail
          python report.py
          echo "== after generation ==" && ls -l

      - name: Prepare Pages artifact
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p public
          shopt -s nullglob
          for f in index.html report.pdf table.csv; do
            if [ -f "$f" ]; then cp "$f" public/; fi
          done

          # 若没有 index.html 但有 PDF，生成一个极简跳转页（用 printf 避免 here-doc/YAML 缩进问题）
          if [ ! -f public/index.html ] && [ -f public/report.pdf ]; then
            printf '%s\n' \
              '<!doctype html><meta charset="utf-8">' \
              '<meta http-equiv="refresh" content="0; url=./report.pdf">' \
              'If you are not redirected, <a href="./report.pdf">open the PDF</a>.' \
              > public/index.html
          fi

          echo "== public content ==" && ls -l public

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
          name: github-pages
          retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
